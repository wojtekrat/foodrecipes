{"version":3,"sources":["components/RecipeDetails.js","components/Recipe.js","components/Alert.js","bg1.jpg","App.js","reportWebVitals.js","index.js"],"names":["StyledUl","styled","ul","RecipeDetails","ingredients","map","ingredient","text","uuidv4","StyledRecipe","div","RecipeTitle","RecipeImage","RecipeUrl","RecipeIngredients","RecipeMore","Recipe","recipe","useState","show","setShow","label","image","url","src","alt","onClick","href","target","rel","StyledAlert","Alert","alert","StyledApp","AppHeader","back","AppOverlay","AppTitle","AppSearch","AppContent","ReturnButton","App","query","setQuery","recipes","setRecipes","setAlert","openRecipes","setOpenRecipes","getData","a","Axios","get","result","data","more","hits","console","log","onSubmit","e","preventDefault","type","placeholder","autoComplete","onChange","value","id","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.91ab0020.chunk.js","sourcesContent":["import React from 'react'\r\nimport {v4 as uuidv4} from 'uuid'\r\nimport styled from 'styled-components'\r\n\r\nconst StyledUl = styled.ul`\r\ndisplay: flex;\r\nalign-items: left;\r\n`\r\n\r\nconst RecipeDetails = ({ingredients}) => {\r\n    return ingredients.map(ingredient => {\r\n        return (\r\n            <StyledUl key={uuidv4()}>\r\n                <li>{ingredient.text}</li>\r\n            </StyledUl>\r\n        )\r\n    })\r\n    \r\n}\r\n\r\nexport default RecipeDetails\r\n","import React, {useState} from 'react'\r\nimport styled from 'styled-components'\r\nimport RecipeDetails from './RecipeDetails'\r\n\r\nconst StyledRecipe = styled.div`\r\nwidth: 220px;\r\npadding: 20px 20px;\r\ndisplay: flex;\r\nflex-direction: column;\r\nalign-items: center;\r\nmargin: 15px;\r\nposition: relative;\r\nbackground-color: #626f6e;\r\nbox-shadow: 1px 1px 1px 1px #656565;\r\nheight: fit-content;\r\nborder-radius: 5px;\r\n`\r\nconst RecipeTitle = styled.div`\r\ndisplay: flex;\r\nflex-wrap: wrap;\r\nposition: absolute;\r\ntop: 5;\r\nz-index: 2;\r\nbackground-color: #3d87a7;\r\nwidth: 220px;\r\njustify-content: center;\r\nalign-items: center;\r\nfont-size: 15px;\r\nheight: fit-content;\r\nopacity: 0.85;\r\ncolor: white;\r\npadding: 10px;\r\nfont-weight: 600;\r\nfont-size: 16px;\r\n`\r\n\r\nconst RecipeImage = styled.div`\r\nposition: relative;\r\n\r\nimg {\r\n    height: 240px;\r\n}\r\n`\r\n\r\nconst RecipeUrl = styled.div`\r\nmargin-top: 5px;\r\nbackground-color: white;\r\nwidth: 240px;\r\ntext-align: center;\r\na {\r\n    text-decoration: none;\r\n    color: #3d87a7;\r\n    \r\n    &:hover {\r\n        color: #666666;\r\n    }\r\n}\r\n`\r\n\r\nconst RecipeIngredients = styled.div`\r\nbackground-color: #3d87a7;\r\ncolor: white;\r\nwidth: 232px;\r\ntext-align: center;\r\npadding: 4px;\r\ncursor: pointer;\r\n\r\n&:hover {\r\n    background-color: #ffd102;\r\n}\r\n`\r\n\r\nconst RecipeMore = styled.div`\r\n\r\n`\r\n\r\n\r\nconst Recipe = ({recipe}) => {\r\n    const [show, setShow] = useState(false)\r\n    const {label, image, url, ingredients} = recipe.recipe;\r\n    return (\r\n        <StyledRecipe>\r\n            <RecipeTitle>{label}</RecipeTitle>\r\n            <RecipeImage><img src={image} alt={label} /></RecipeImage>\r\n            \r\n            <RecipeIngredients onClick={()=> setShow(!show)}>See ingredients</RecipeIngredients>\r\n            <RecipeMore>\r\n            {show &&\r\n            <RecipeDetails ingredients={ingredients}/>}\r\n            </RecipeMore>\r\n            <RecipeUrl>\r\n            <a href={url} target=\"_blank\" rel=\"noopener \r\n            noreferrer\">See recipe</a>\r\n            </RecipeUrl>\r\n        </StyledRecipe>\r\n    )\r\n}\r\n\r\nexport default Recipe\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\n\r\nconst StyledAlert = styled.div`\r\nbackground-color: orange;\r\nwidth: 100%;\r\ntext-align: center;\r\nposition: absolute;\r\ntop: 0;\r\nleft: 0;\r\n\r\nh3 {\r\n    color: white;\r\n}\r\n`\r\n\r\nconst Alert = ({alert}) => {\r\n    return (\r\n        <StyledAlert>\r\n           <h3> {alert}</h3>\r\n        </StyledAlert>\r\n    )\r\n}\r\n\r\nexport default Alert\r\n","export default __webpack_public_path__ + \"static/media/bg1.ad9a8eda.jpg\";","import React, {useState} from 'react'\nimport Axios from 'axios'\nimport Recipe from './components/Recipe'\nimport {v4 as uuidv4} from 'uuid'\nimport styled from 'styled-components'\nimport Alert from './components/Alert'\nimport back from './bg1.jpg'\n\nconst StyledApp = styled.div`\ndisplay: flex;\nflex-direction: column;\njustify-content: center;\nalign-items: center;\nwidth: 100%;\nfont-family: 'Yantramanav', sans-serif;\nfont-weight: 600;\ncolor: white;\n`\n\nconst AppHeader = styled.div`\nbackground: url(${back}) no-repeat center center fixed; \nbackground-size: cover;\nmin-width: 100%;\nmin-height: 100vh;\ndisplay: flex;\nflex-direction: column;\njustify-content: center;\nalign-items: center;  \n\n`\n\nconst AppOverlay = styled.div`\nposition: relative;\nbackground-color: #3d87a7;\nheight: 200px;\nwidth: 400px;\nopacity: 0.5;\nz-index: 1;\ntop: 100px;\nborder-radius: 10px;\n`\n\nconst AppTitle = styled.div`\nwidth: 100%;\ndisplay: flex;\nalign-items: center;\njustify-content: center;\nflex-direction: column;\nposition: relative;\ntop: -100px;\nz-index: 5;\nh1 {\n  font-size: 50px;\n  margin: 0px;\n  font-family: 'Righteous', cursive;\n}\n\np {\n  margin: 0px;\n  font-size: 20px;\n  padding-top: 10px;\n}\n`\n\n\nconst AppSearch = styled.div`\npadding-top: 30px;\npadding-bottom: 30px;\nwidth: 100%;\ndisplay: flex;\nalign-items: center;\njustify-content: center;\nposition: relative;\ntop: -100px;\nz-index: 5;\n\n\ninput[type=text] {\n  padding: 10px;\n  width: 300px;\n  border: none;\n  outline: none;\n}\n\ninput[type=submit] {\n  padding: 10px;\n  border: none;\n  &:hover {\n    color: orange;\n    cursor: pointer;\n  }\n}\n\n@media (max-width: 700px) {\n  input[type=text] {\n    width: 240px;\n  }\n}\n  \n`\n\nconst AppContent = styled.div`\ndisplay: flex;\nflex-wrap: wrap;\nwidth: 80%;\njustify-content: center;\nbackground-color: rgba(0,0,2,255);\nmin-width: 100%;\nmin-height: 100vh;\npadding-top: 20px;\n\n`\n\nconst ReturnButton = styled.div`\nposition: absolute;\nright: 10px;\ntop: 10px;\nbackground-color: #3d87a7;\nheight: 40px;\nwidth: 40px;\ndisplay: flex;\nalign-items: center;\njustify-content: center;\nfont-size: 30px;\ncursor: pointer;\nz-index: 3;\nborder-radius: 30px;\n\n&:hover {\n  background-color: #ffd102;\n}\n`\n\nconst App = () => {\n  const [query, setQuery] = useState(\"\")\n  const [recipes, setRecipes] = useState([])\n  const [alert, setAlert] = useState(\"\")\n  const [openRecipes, setOpenRecipes] = useState(false)\n\n  const APP_ID = \"99ced3a4\";\n  const APP_KEY = \"0744a4777d691ee9ce96ccc79024e306\"\n\n  const url =`https://api.edamam.com/search?q=${query}&app_id=${APP_ID}&app_key=${APP_KEY}`\n\n  const getData = async () => {\n    if (query!==\"\") {\n      const result = await Axios.get(url)\n      if (!result.data.more) {\n        return (\n          setAlert(\"No food with such name\")\n        )\n      }\n      setRecipes(result.data.hits)\n      console.log(result)\n      setQuery(\"\")\n      setAlert(\"\")\n      setOpenRecipes(true)\n    } else {\n      setAlert(\"Please fill the form\")\n      setQuery(\"\")\n    }\n    \n  }\n\n  const onChange = e => {\n    setQuery(e.target.value)\n  }\n\n  const onSubmit = e => {\n    e.preventDefault();\n    getData();\n  }\n  return (\n    <StyledApp>\n      \n      {!openRecipes && \n      <AppHeader>\n        <AppOverlay></AppOverlay>\n        <AppTitle>\n          <h1>Hungry?</h1>\n          <p>Find ideas for a tasty meal!</p>\n        </AppTitle>\n        <AppSearch>\n          <form onSubmit={onSubmit}>\n            <input \n            type=\"text\" \n            placeholder=\"Search recipe\" \n            autoComplete=\"off\" \n            onChange={onChange}\n            value={query} />\n            <input \n            type=\"submit\" \n            value=\"Search\"/>\n            \n          </form>\n        </AppSearch>\n      </AppHeader>}\n      {alert !== \"\" && <Alert alert={alert}/>}\n      {openRecipes && \n      <AppContent id=\"content\">\n        <ReturnButton onClick={()=>{setOpenRecipes(false)}}>X</ReturnButton>\n      {recipes !== [] && recipes.map(recipe => <Recipe key={uuidv4()} recipe={recipe}/>)} \n    </AppContent>\n      }\n      \n    </StyledApp>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}