{"version":3,"sources":["components/RecipeDetails.js","components/Recipe.js","components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["RecipeDetails","ingredients","map","ingredient","text","uuidv4","StyledRecipe","styled","div","RecipeTitle","RecipeImage","RecipeUrl","RecipeIngredients","Recipe","recipe","useState","show","setShow","label","image","url","src","alt","onClick","href","target","rel","Alert","alert","StyledApp","AppTitle","AppSearch","AppContent","App","query","setQuery","recipes","setRecipes","setAlert","getData","a","Axios","get","result","data","more","hits","console","log","className","onSubmit","e","preventDefault","type","placeholder","autoComplete","onChange","value","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mRAceA,EAXO,SAAC,GACnB,OADqC,EAAjBC,YACDC,KAAI,SAAAC,GACnB,OACI,6BACI,6BAAKA,EAAWC,QADXC,mBCFfC,EAAeC,IAAOC,IAAV,kRAYZC,EAAcF,IAAOC,IAAV,6SAkBXE,EAAcH,IAAOC,IAAV,iFAQXG,EAAYJ,IAAOC,IAAV,qJAWTI,EAAoBL,IAAOC,IAAV,yLAiCRK,EAnBA,SAAC,GAAc,IAAbC,EAAY,EAAZA,OACb,EAAwBC,oBAAS,GAAjC,mBAAOC,EAAP,KAAaC,EAAb,KACA,EAAyCH,EAAOA,OAAzCI,EAAP,EAAOA,MAAOC,EAAd,EAAcA,MAAOC,EAArB,EAAqBA,IAAKnB,EAA1B,EAA0BA,YAC1B,OACI,eAACK,EAAD,WACI,cAACG,EAAD,UAAcS,IACd,cAACR,EAAD,UAAa,qBAAKW,IAAKF,EAAOG,IAAKJ,MAEnC,cAACN,EAAD,CAAmBW,QAAS,kBAAKN,GAASD,IAA1C,yBACCA,GACD,cAAC,EAAD,CAAef,YAAaA,IAC5B,cAACU,EAAD,UACA,mBAAGa,KAAMJ,EAAKK,OAAO,SAASC,IAAI,yBAAlC,8BCrEGC,EARD,SAAC,GAAa,IAAZC,EAAW,EAAXA,MACZ,OACI,8BACG,mCAAMA,QCEXC,EAAYtB,IAAOC,IAAV,qHAOTsB,EAAWvB,IAAOC,IAAV,iNAWRuB,EAAYxB,IAAOC,IAAV,uXAyBTwB,EAAazB,IAAOC,IAAV,uGAyEDyB,EAjEH,WACV,MAA0BlB,mBAAS,IAAnC,mBAAOmB,EAAP,KAAcC,EAAd,KACA,EAA8BpB,mBAAS,IAAvC,mBAAOqB,EAAP,KAAgBC,EAAhB,KACA,EAA0BtB,mBAAS,IAAnC,mBAAOa,EAAP,KAAcU,EAAd,KAKMlB,EAAG,0CAAqCc,EAArC,mBAHM,WAGN,oBAFO,oCAIVK,EAAO,uCAAG,4BAAAC,EAAA,yDACF,KAARN,EADU,iCAESO,IAAMC,IAAItB,GAFnB,WAENuB,EAFM,QAGAC,KAAKC,KAHL,yCAKRP,EAAS,2BALD,OAQZD,EAAWM,EAAOC,KAAKE,MACvBC,QAAQC,IAAIL,GACZR,EAAS,IACTG,EAAS,IAXG,wBAaZA,EAAS,wBACTH,EAAS,IAdG,4CAAH,qDA2Bb,OACE,eAACN,EAAD,WACE,eAACC,EAAD,WACA,yCACA,gEAEA,cAACC,EAAD,UACA,uBAAMkB,UAAU,cAAcC,SAXjB,SAAAC,GACfA,EAAEC,iBACFb,KASE,UACE,uBACAc,KAAK,OACLC,YAAY,cACZC,aAAa,MACbC,SApBW,SAAAL,GACfhB,EAASgB,EAAE1B,OAAOgC,QAoBdA,MAAOvB,IAEP,uBACAmB,KAAK,SACLI,MAAM,gBAGG,KAAV7B,GAAgB,cAAC,EAAD,CAAOA,MAAOA,IAC/B,cAACI,EAAD,UACGI,IAAY,IAAMA,EAAQlC,KAAI,SAAAY,GAAM,OAAI,cAAC,EAAD,CAAuBA,OAAQA,GAAlBT,wBCzG/CqD,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.f7b8d864.chunk.js","sourcesContent":["import React from 'react'\r\nimport {v4 as uuidv4} from 'uuid'\r\n\r\nconst RecipeDetails = ({ingredients}) => {\r\n    return ingredients.map(ingredient => {\r\n        return (\r\n            <ul key={uuidv4()}>\r\n                <li>{ingredient.text}</li>\r\n            </ul>\r\n        )\r\n    })\r\n    \r\n}\r\n\r\nexport default RecipeDetails\r\n","import React, {useState} from 'react'\r\nimport styled from 'styled-components'\r\nimport RecipeDetails from './RecipeDetails'\r\n\r\nconst StyledRecipe = styled.div`\r\nwidth: 260px;\r\npadding: 30px 20px 30px 20px;\r\ndisplay: flex;\r\nflex-direction: column;\r\nalign-items: center;\r\nmargin: 15px;\r\nposition: relative;\r\nbackground-color: rgb(233, 233, 233);\r\nbox-shadow: 1px 1px 1px 1px lightgrey;\r\nheight: fit-content;\r\n`\r\nconst RecipeTitle = styled.div`\r\ndisplay: flex;\r\nflex-wrap: wrap;\r\nposition: absolute;\r\ntop: 5;\r\nz-index: 2;\r\nbackground-color: orange;\r\nwidth: 220px;\r\njustify-content: center;\r\nalign-items: center;\r\nfont-size: 15px;\r\nheight: fit-content;\r\nopacity: 0.85;\r\ncolor: white;\r\npadding: 10px;\r\nfont-weight: 600;\r\n`\r\n\r\nconst RecipeImage = styled.div`\r\nposition: relative;\r\n\r\nimg {\r\n    height: 240px;\r\n}\r\n`\r\n\r\nconst RecipeUrl = styled.div`\r\nmargin-top: 5px;\r\na {\r\n    text-decoration: none;\r\n    color: orange;\r\n    &:hover {\r\n        color: #666666;\r\n    }\r\n}\r\n`\r\n\r\nconst RecipeIngredients = styled.div`\r\nbackground-color: #666666;\r\ncolor: white;\r\nwidth: 90%;\r\ntext-align: center;\r\npadding: 4px;\r\ncursor: pointer;\r\n\r\n&:hover {\r\n    background-color: orange;\r\n}\r\n`\r\n\r\n\r\nconst Recipe = ({recipe}) => {\r\n    const [show, setShow] = useState(false)\r\n    const {label, image, url, ingredients} = recipe.recipe;\r\n    return (\r\n        <StyledRecipe>\r\n            <RecipeTitle>{label}</RecipeTitle>\r\n            <RecipeImage><img src={image} alt={label} /></RecipeImage>\r\n            \r\n            <RecipeIngredients onClick={()=> setShow(!show)}>Ingredients</RecipeIngredients>\r\n            {show &&\r\n            <RecipeDetails ingredients={ingredients}/>}\r\n            <RecipeUrl>\r\n            <a href={url} target=\"_blank\" rel=\"noopener \r\n            noreferrer\">See recipe</a>\r\n            </RecipeUrl>\r\n        </StyledRecipe>\r\n    )\r\n}\r\n\r\nexport default Recipe\r\n","import React from 'react'\r\n\r\nconst Alert = ({alert}) => {\r\n    return (\r\n        <div>\r\n           <h2> {alert}</h2>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Alert\r\n","import React, {useState} from 'react'\nimport Axios from 'axios'\nimport Recipe from './components/Recipe'\nimport {v4 as uuidv4} from 'uuid'\nimport styled from 'styled-components'\nimport Alert from './components/Alert'\n\nconst StyledApp = styled.div`\ndisplay: flex;\nflex-direction: column;\njustify-content: center;\nalign-items: center;\n`\n\nconst AppTitle = styled.div`\nwidth: 100%;\ndisplay: flex;\nalign-items: center;\njustify-content: center;\nheight: 120px;\nbackground-color: orange;\ncolor: white;\nflex-direction: column;\npadding-top: 30px;\n`\nconst AppSearch = styled.div`\npadding-top: 30px;\npadding-bottom: 30px;\nwidth: 100%;\ndisplay: flex;\nalign-items: center;\njustify-content: center;\nbackground-color: orange;\n\ninput[type=text] {\n  padding: 10px;\n  width: 300px;\n  border: none;\n}\n\ninput[type=submit] {\n  padding: 10px;\n  border: none;\n  &:hover {\n    color: orange;\n    cursor: pointer;\n  }\n}\n`\n\nconst AppContent = styled.div`\ndisplay: flex;\nflex-wrap: wrap;\nwidth: 80%;\njustify-content: center;\n\n`\n\nconst App = () => {\n  const [query, setQuery] = useState(\"\")\n  const [recipes, setRecipes] = useState([])\n  const [alert, setAlert] = useState(\"\")\n\n  const APP_ID = \"99ced3a4\";\n  const APP_KEY = \"0744a4777d691ee9ce96ccc79024e306\"\n\n  const url =`https://api.edamam.com/search?q=${query}&app_id=${APP_ID}&app_key=${APP_KEY}`\n\n  const getData = async () => {\n    if (query!==\"\") {\n      const result = await Axios.get(url)\n      if (!result.data.more) {\n        return (\n          setAlert(\"No food with such name\")\n        )\n      }\n      setRecipes(result.data.hits)\n      console.log(result)\n      setQuery(\"\")\n      setAlert(\"\")\n    } else {\n      setAlert(\"Please fill the form\")\n      setQuery(\"\")\n    }\n    \n  }\n\n  const onChange = e => {\n    setQuery(e.target.value)\n  }\n\n  const onSubmit = e => {\n    e.preventDefault();\n    getData();\n  }\n  return (\n    <StyledApp>\n      <AppTitle>\n      <h1>Hungry?</h1>\n      <p>Find ideas for a tasty meal!</p>\n      </AppTitle>\n      <AppSearch>\n      <form className=\"search-form\" onSubmit={onSubmit}>\n        <input \n        type=\"text\" \n        placeholder=\"Search Food\" \n        autoComplete=\"off\" \n        onChange={onChange}\n        value={query}\n        />\n        <input \n        type=\"submit\" \n        value=\"Search\"/>\n      </form>\n      </AppSearch>\n      {alert !== \"\" && <Alert alert={alert}/>}\n      <AppContent>\n        {recipes !== [] && recipes.map(recipe => <Recipe key={uuidv4()} recipe={recipe}/>)} \n      </AppContent>\n    </StyledApp>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}